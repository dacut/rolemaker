AWSTemplateFormatVersion: "2010-09-09"
Description: "Rolemaker: Allow end users to create restricted AWS roles"
Parameters:
  ExternalServerName:
    Type: String
    Description: The name of the website as accessed by users.
  Vpc:
    Type: AWS::EC2::VPC::Id
    Description: The VPC to use when launching EC2 instances.
  InstanceSubnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: >
      The allowable subnets for the EC2 instances. These must be within the
      selected VPC.
  InstanceType:
    Type: String
    Default: t2.micro
    Description: The EC2 instance type to run on.
    AllowedValues:
      - c3.large
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m4.16xlarge
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - r4.large
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - t2.2xlarge
  MaxInstances:
    Type: Number
    Default: 1
    Description: The maximum number of instances to create in the autoscaling group.
    MinValue: 1
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: The key pair to use when launching EC2 instances.
  AdminCidrPrefix:
    Type: String
    Default: "0.0.0.0/0"
    Description: The CIDR prefix to allow administrative (SSH) traffic on.
  ExternalCidrPrefix:
    Type: String
    Default: "0.0.0.0/0"
    Description: The CIDR prefix to allow website traffic on.
  GitEndpoint:
    Type: String
    Default: "https://github.com/dacut/rolemaker.git"
    Description: The GitHub repository to pull the Rolemaker code from.
  EnableDebug:
    Type: String
    Default: false
    Description: Whether debugging output should be provided.
    AllowedValues:
      - false
      - true
Mappings:
  AmazonLinuxAMI:
    ap-northeast-1:
      HVM64EBS: ami-56d4ad31
      HVM64Instance: ami-0ed3aa69
      PV64EBS: ami-bdd2abda
      PV64Instance: ami-55d4ad32
    ap-northeast-2:
      HVM64EBS: ami-dac312b4
      HVM64Instance: ami-13c0117d
    ap-south-1:
      HVM64EBS: ami-f9daac96
      HVM64Instance: ami-09d1a766
    ap-southeast-1:
      HVM64EBS: ami-dc9339bf
      HVM64Instance: ami-809238e3
      PV64EBS: ami-2c963c4f
      PV64Instance: ami-de9339bd
    ap-southeast-2:
      HVM64EBS: ami-1c47407f
      HVM64Instance: ami-73464110
      PV64EBS: ami-6f47400c
      PV64Instance: ami-2f45424c
    cn-central-1:
      HVM64EBS: ami-ebed508f
      HVM64Instance: ami-07f34e63
    cn-north-1:
      HVM64EBS: ami-e6c7108b
      HVM64Instance: ami-31c6115c
      PV64EBS: ami-34c21559
      PV64Instance: ami-e8c41385
    eu-central-1:
      HVM64EBS: ami-af0fc0c0
      HVM64Instance: ami-e80dc287
      PV64EBS: ami-3b0fc054
      PV64Instance: ami-a80fc0c7
    eu-west-1:
      HVM64EBS: ami-70edb016
      HVM64Instance: ami-50efb236
      PV64EBS: ami-e0f2af86
      PV64Instance: ami-49ecb12f
    eu-west-2:
      HVM64EBS: ami-f1949e95
      HVM64Instance: ami-84aba1e0
    sa-east-1:
      HVM64EBS: ami-80086dec
      HVM64Instance: ami-550b6e39
      PV64EBS: ami-2a096c46
      PV64Instance: ami-da0e6bb6
    us-east-1:
      HVM64EBS: ami-0b33d91d
      HVM64Instance: ami-4a3cd65c
      PV64EBS: ami-7a3dd76c
      PV64Instance: ami-f73cd6e1
    us-east-2:
      HVM64EBS: ami-c55673a0
      HVM64Instance: ami-574b6e32
    us-gov-west-1:
      HVM64EBS: ami-b21fa4d3
      HVM64Instance: ami-0d19a26c
      PV64EBS: ami-6d1da60c
      PV64Instance: ami-b31fa4d2
    us-west-1:
      HVM64EBS: ami-165a0876
      HVM64Instance: ami-25540645
      PV64EBS: ami-f25a0892
      PV64Instance: ami-5f5b093f
    us-west-2:
      HVM64EBS: ami-f173cc91
      HVM64Instance: ami-d475cab4
      PV64EBS: ami-8a72cdea
      PV64Instance: ami-f174cb91
Metadata:
  "AWS::CloudFormation::Interface":
    ParameterGroups:
      -
        Label:
          default: Website Parameters
        Parameters:
          - ExternalServerName
          - Vpc
          - InstanceSubnets
      -
        Label:
          default: Performance
        Parameters:
          - InstanceType
          - MaxInstances
      -
        Label:
          default: Security
        Parameters:
          - KeyName
          - AdminCidrPrefix
          - ExternalCidrPrefix
      -
        Label:
          default: Advanced
        Parameters:
          - GitEndpoint
          - EnableDebug
Resources:
  AutoScalingGroup:
    Type: "AWS::AutoScaling::AutoScalingGroup"
    Properties:
      Cooldown: 600
      DesiredCapacity: 1
      LaunchConfigurationName: !Ref LaunchConfig
      MaxSize: !Ref MaxInstances
      MinSize: 1
      Tags:
        - Key: Name
          Value: RoleMaker
          PropagateAtLaunch: true
      VPCZoneIdentifier: !Ref InstanceSubnets
  LaunchConfig:
    Type: "AWS::AutoScaling::LaunchConfiguration"
    Properties:
      AssociatePublicIpAddress: true
      IamInstanceProfile: !Ref InstanceProfile
      ImageId:
        "Fn::FindInMap":
          - "AmazonLinuxAMI"
          - !Ref "AWS::Region"
          - "HVM64EBS"
      InstanceMonitoring: true
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      SecurityGroups: [ !Ref InstanceSecurityGroup ]
      UserData:
        "Fn::Base64":
          "Fn::Sub": <
            \#!/bin/bash
            yum update -y
            yum install -y git httpd24 httpd24-devel httpd24-manual \
              httpd24-tools mod24_auth_mellon mod24_proxy mod24_ssl \
              mod24_wsgi-python35 python35 python35-pip python35-setuptools
            git clone ${GitEndpoint} /opt/rolemaker
            pip-3.5 install -r /opt/rolemaker/requirements.txt
            cat > /etc/sysconfig/rolemaker <<.EOF
            OPTIONS="-f /opt/rolemaker/rolemaker-httpd.conf"
            HTTP_PORT=80
            HTTPS_PORT=443
            EXTERNAL_SERVER_NAME=${ExternalServerName}
            export HTTP_PORT HTTPS_PORT EXTERNAL_SERVER_NAME
            .EOF
            ln -s httpd /etc/init.d/rolemaker
            chkconfig --level 2345 rolemaker on
            service rolemaker start
  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref InstanceRole
  InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action: "sts:AssumeRole"
      Policies:
        -
          PolicyName: ManageRoles
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: Allow
                Action:
                  - "iam:AttachRolePolicy"
                  - "iam:CreateInstanceProfile"
                  - "iam:CreateRole"
                  - "iam:DeleteInstanceProfile"
                  - "iam:DeleteRole"
                  - "iam:DeleteRolePolicy"
                  - "iam:GetInstanceProfile"
                  - "iam:GetPolicy"
                  - "iam:GetPolicyVersion"
                  - "iam:GetRole"
                  - "iam:GetRolePolicy"
                  - "iam:ListAttachedRolePolicies"
                  - "iam:ListInstanceProfiles"
                  - "iam:ListInstanceProfilesForRole"
                  - "iam:ListPolicies"
                  - "iam:ListPolicyVersions"
                  - "iam:ListRolePolicies"
                  - "iam:ListRoles"
                  - "iam:PutRolePolicy"
                  - "iam:RemoveRoleFromInstanceProfile"
                  - "iam:UpdateAssumeRolePolicy"
                Resource: "*"
        -
          PolicyName: ManageRemoteRoles
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: Allow
                Action:
                  - "sts:AssumeRole"
                Resource: "*"
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Rolemaker instance security group
      SecurityGroupEgress:
        - # DNS UDP Traffic
          CidrIp: "0.0.0.0/0"
          FromPort: 53
          ToPort: 53
          IpProtocol: udp
        - # DNS TCP Traffic
          CidrIp: "0.0.0.0/0"
          FromPort: 53
          ToPort: 53
          IpProtocol: tcp
        - # AWS endpoint traffic
          CidrIp: "0.0.0.0/0"
          FromPort: 443
          ToPort: 443
          IpProtocol: tcp
      SecurityGroupIngress:
        - # SSH
          CidrIp: !Ref AdminCidrPrefix
          FromPort: 22
          ToPort: 22
          IpProtocol: tcp
        - # HTTP
          CidrIp: !Ref ExternalCidrPrefix
          FromPort: 8080
          ToPort: 8080
          IpProtocol: tcp
        - # HTTPS
          CidrIp: !Ref ExternalCidrPrefix
          FromPort: 8443
          ToPort: 8443
          IpProtocol: tcp
      Tags:
        -
          Key: Name
          Value: Rolemaker
      VpcId: !Ref Vpc
